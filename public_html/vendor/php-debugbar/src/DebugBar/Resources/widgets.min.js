
if (typeof (PhpDebugBar) == "undefined"){var PhpDebugBar = {}; PhpDebugBar.$ = jQuery}(function(g){PhpDebugBar.Widgets = {}; var e = PhpDebugBar.Widgets.htmlize = function(o){return o.replace(/\n/g, "<br />").replace(/\s/g, "&nbsp;")}; var l = PhpDebugBar.Widgets.renderValue = function(p, o){if (typeof (p) !== "string"){if (o){return e(JSON.stringify(p, undefined, 2))}return JSON.stringify(p)}return p}; var c = PhpDebugBar.Widgets.highlight = function(o, p){if (typeof (o) === "string"){if (typeof (hljs) === "undefined"){return e(o)}if (p){return hljs.highlight(p, o).value}return hljs.highlightAuto(o).value}if (typeof (hljs) === "object"){o.each(function(q, r){hljs.highlightBlock(r)})}return o}; var j = PhpDebugBar.Widgets.createCodeBlock = function(o, q){var p = g("<pre />"); g("<code />").text(o).appendTo(p); if (q){p.addClass("language-" + q)}c(p); return p}; var d = PhpDebugBar.utils.makecsscls("phpdebugbar-widgets-"); var k = PhpDebugBar.Widgets.ListWidget = PhpDebugBar.Widget.extend({tagName:"ul", className:d("list"), initialize:function(o){if (!o.itemRenderer){o.itemRenderer = this.itemRenderer}this.set(o)}, render:function(){this.bindAttr(["itemRenderer", "data"], function(){this.$el.empty(); if (!this.has("data")){return}var q = this.get("data"); for (var p = 0; p < q.length; p++){var o = g("<li />").addClass(d("list-item")).appendTo(this.$el); this.get("itemRenderer")(o, q[p])}})}, itemRenderer:function(o, p){o.html(l(p))}}); var h = PhpDebugBar.Widgets.KVListWidget = k.extend({tagName:"dl", className:d("kvlist"), render:function(){this.bindAttr(["itemRenderer", "data"], function(){this.$el.empty(); if (!this.has("data")){return}var o = this; g.each(this.get("data"), function(q, s){var r = g("<dt />").addClass(d("key")).appendTo(o.$el); var p = g("<dd />").addClass(d("value")).appendTo(o.$el); o.get("itemRenderer")(r, p, q, s)})})}, itemRenderer:function(q, o, p, r){q.text(p); o.html(e(r))}}); var f = PhpDebugBar.Widgets.VariableListWidget = h.extend({className:d("kvlist varlist"), itemRenderer:function(s, o, q, t){g("<span />").attr("title", q).text(q).appendTo(s); var p = t; if (p && p.length > 100){p = p.substr(0, 100) + "..."}var r = null; o.text(p).click(function(){if (o.hasClass(d("pretty"))){o.text(p).removeClass(d("pretty"))} else{r = r || j(t); o.addClass(d("pretty")).empty().append(r)}})}}); var a = PhpDebugBar.Widgets.IFrameWidget = PhpDebugBar.Widget.extend({tagName:"iframe", className:d("iframe"), render:function(){this.$el.attr({seamless:"seamless", border:"0", width:"100%", height:"100%"}); this.bindAttr("data", function(o){this.$el.attr("src", o)})}}); var b = PhpDebugBar.Widgets.MessagesWidget = PhpDebugBar.Widget.extend({className:d("messages"), render:function(){var o = this; this.$list = new k({itemRenderer:function(q, s){var p = s.message; if (p.length > 100){p = p.substr(0, 100) + "..."}var t = g("<span />").addClass(d("value")).text(p).appendTo(q); if (!s.is_string || s.message.length > 100){var r = s.message; if (!s.is_string){r = null}q.css("cursor", "pointer").click(function(){if (t.hasClass(d("pretty"))){t.text(p).removeClass(d("pretty"))} else{r = r || j(s.message, "php"); t.addClass(d("pretty")).empty().append(r)}})}if (s.label){t.addClass(d(s.label)); g("<span />").addClass(d("label")).text(s.label).appendTo(q)}if (s.collector){g("<span />").addClass(d("collector")).text(s.collector).appendTo(q)}}}); this.$list.$el.appendTo(this.$el); this.$toolbar = g('<div><i class="phpdebugbar-fa phpdebugbar-fa-search"></i></div>').addClass(d("toolbar")).appendTo(this.$el); g('<input type="text" />').on("change", function(){o.set("search", this.value)}).appendTo(this.$toolbar); this.bindAttr("data", function(s){this.set({exclude:[], search:""}); this.$toolbar.find(d(".filter")).remove(); var r = [], p = this; for (var q = 0; q < s.length; q++){if (!s[q].label || g.inArray(s[q].label, r) > - 1){continue}r.push(s[q].label); g("<a />").addClass(d("filter")).text(s[q].label).attr("rel", s[q].label).on("click", function(){p.onFilterClick(this)}).appendTo(this.$toolbar)}}); this.bindAttr(["exclude", "search"], function(){var v = this.get("data"), p = this.get("exclude"), s = this.get("search"), u = false, q = []; if (s && s === s.toLowerCase()){u = true}for (var r = 0; r < v.length; r++){var t = u?v[r].message.toLowerCase():v[r].message; if ((!v[r].label || g.inArray(v[r].label, p) === - 1) && (!s || t.indexOf(s) > - 1)){q.push(v[r])}}this.$list.set("data", q)})}, onFilterClick:function(p){g(p).toggleClass(d("excluded")); var o = []; this.$toolbar.find(d(".filter") + d(".excluded")).each(function(){o.push(this.rel)}); this.set("exclude", o)}}); var i = PhpDebugBar.Widgets.TimelineWidget = PhpDebugBar.Widget.extend({tagName:"ul", className:d("timeline"), render:function(){this.bindAttr("data", function(s){this.$el.empty(); if (s.measures){for (var t = 0; t < s.measures.length; t++){var o = s.measures[t]; var r = g("<div />").addClass(d("measure")), v = g("<li />"), q = (o.relative_start * 100 / s.duration).toFixed(2), p = Math.min((o.duration * 100 / s.duration).toFixed(2), 100 - q); r.append(g("<span />").addClass(d("value")).css({left:q + "%", width:p + "%"})); r.append(g("<span />").addClass(d("label")).text(o.label + " (" + o.duration_str + ")")); if (o.collector){g("<span />").addClass(d("collector")).text(o.collector).appendTo(r)}r.appendTo(v); this.$el.append(v); if (o.params && !g.isEmptyObject(o.params)){var w = g('<table><tr><th colspan="2">Params</th></tr></table>').addClass(d("params")).appendTo(v); for (var u in o.params){if (typeof o.params[u] !== "function"){w.append('<tr><td class="' + d("name") + '">' + u + '</td><td class="' + d("value") + '"><pre><code>' + o.params[u] + "</code></pre></td></tr>")}}v.css("cursor", "pointer").click(function(){var x = g(this).find("table"); if (x.is(":visible")){x.hide()} else{x.show()}})}}}})}}); var n = PhpDebugBar.Widgets.ExceptionsWidget = PhpDebugBar.Widget.extend({className:d("exceptions"), render:function(){this.$list = new k({itemRenderer:function(o, q){g("<span />").addClass(d("message")).text(q.message).appendTo(o); if (q.file){g("<span />").addClass(d("filename")).text(q.file + "#" + q.line).appendTo(o)}if (q.type){g("<span />").addClass(d("type")).text(q.type).appendTo(o)}if (q.surrounding_lines){var p = j(q.surrounding_lines.join(""), "php").addClass(d("file")).appendTo(o); o.click(function(){if (p.is(":visible")){p.hide()} else{p.show()}})}}}); this.$list.$el.appendTo(this.$el); this.bindAttr("data", function(o){this.$list.set("data", o); if (o.length == 1){this.$list.$el.children().first().find(d(".file")).show()}})}}); var m = PhpDebugBar.Widgets.DebugLogsWidget = PhpDebugBar.Widget.extend({className:d("messages"), render:function(){var o = this; this.$list = new k({itemRenderer:function(q, s){var p = s.message; var t = g("<span />").addClass(d("value")).text(p).appendTo(q); var r = s.message; if (!s.is_string){r = null}q.css("cursor", "pointer").click(function(){if (t.hasClass(d("pretty"))){t.text(p).removeClass(d("pretty"))} else{r = r || j(s.trace, "php"); t.addClass(d("pretty")).append(r)}}); if (s.label){t.addClass(d(s.label)); g("<span />").addClass(d("label")).text(s.label).appendTo(q)}if (s.collector){g("<span />").addClass(d("collector")).text(s.collector).appendTo(q)}}}); this.$list.$el.appendTo(this.$el); this.$toolbar = g('<div><i class="phpdebugbar-fa phpdebugbar-fa-search"></i></div>').addClass(d("toolbar")).appendTo(this.$el); g('<input type="text" />').on("change", function(){o.set("search", this.value)}).css("border", "solid 1px #000").appendTo(this.$toolbar); this.bindAttr("data", function(s){this.set({exclude:[], search:""}); this.$toolbar.find(d(".filter")).remove(); var r = [], p = this; for (var q = 0; q < s.length; q++){if (!s[q].label || g.inArray(s[q].label, r) > - 1){continue}r.push(s[q].label); g("<a />").addClass(d("filter")).text(s[q].label).attr("rel", s[q].label).on("click", function(){p.onFilterClick(this)}).appendTo(this.$toolbar)}}); this.bindAttr(["exclude", "search"], function(){var v = this.get("data"), p = this.get("exclude"), s = this.get("search"), u = false, q = []; if (s && s === s.toLowerCase()){u = true}for (var r = 0; r < v.length; r++){var t = u?v[r].message.toLowerCase():v[r].message; if ((!v[r].label || g.inArray(v[r].label, p) === - 1) && (!s || t.indexOf(s) > - 1)){q.push(v[r])}}this.$list.set("data", q)})}, onFilterClick:function(p){g(p).toggleClass(d("excluded")); var o = []; this.$toolbar.find(d(".filter") + d(".excluded")).each(function(){o.push(this.rel)}); this.set("exclude", o)}})})(PhpDebugBar.$);
